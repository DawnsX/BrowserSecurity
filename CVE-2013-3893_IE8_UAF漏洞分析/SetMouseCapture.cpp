void __userpurge CDoc::SetMouseCapture(int a1, CDoc *a2, CDoc *lpMem, int a4, void *a5, int a6, int a7, int a8)
{
    CDoc *v8;                    // ebx
    int v9;                      // edi
    int v10;                     // eax
    int v11;                     // ecx
    void *v12;                   // eax
    CImplPtrAry *v13;            // ecx
    struct CElementCapture *v14; // esi
    int v15;                     // edi
    CElementCapture *v16;        // ecx
    int v17;                     // eax
    CMessage *v18;               // ST14_4
    CMessage *v19;               // ecx
    CElementCapture *v20;        // ecx
    CImplPtrAry *v21;            // ST14_4
    CServer *v22;                // ecx
    void *v23;                   // [esp+0h] [ebp-A8h]
    struct tagMSG v24;           // [esp+10h] [ebp-98h]
    int v25;                     // [esp+A4h] [ebp-4h]
    void *lpMema;                // [esp+B0h] [ebp+8h]

    v8 = lpMem;
    v9 = a1;
    if (*(lpMem + 469) & 0x1000)
        v9 = 0;
    if (v9)
    {
        v25 = (*(lpMem + 65) >> 2) - 1;
        v10 = v25;
        if (v25 < 0)
            goto LABEL_31;
        v11 = *(lpMem + 67) + 4 * v25;
        do
        {
            if (*(*v11 + 8) == v9)
                break;
            --v10;
            v11 -= 4;
        } while (v10 >= 0);
        if (v10 < 0)
        {
        LABEL_31:
            v12 = ATL_malloc(0x10u);
            lpMema = (v12 ? CElementCapture::CElementCapture(v12, a7, a8, a4, a5) : 0);
            if (lpMema)
            {
                v14 = CDoc::GetLastCapture(v8);
                if (v14 && (v15 = *(v9 + 20), CDoc::HasContainerCapture(v8, v23)))
                {
                    CMessage::CMessage(&v24, 0);
                    v24.message = 533;
                    CDoc::PumpMessage(v8, &v24, 0, 0);
                    if (v14 == CDoc::GetLastCapture(v8))
                    {
                        v17 = *(v14 + 3);
                        if (!(v17 & 2))
                        {
                            v16 = *(v14 + 2);
                            if (!(*(v16 + 7) & 0x8000000))
                            {
                                *(v14 + 3) = v17 | 2;
                                *(v8 + 469) |= 0x1000u;
                                CElement::FireEvent(*(v14 + 2), &s_propdescCElementonlosecapture, 1, 0, -1, 0, 0);
                                *(v8 + 469) &= 0xFFFFEFFF;
                            }
                        }
                    }
                    if (*(v8 + 65) & 0xFFFFFFFC)
                    {
                        if (v14 == CDoc::GetLastCapture(v8))
                        {
                            CElementCapture::~CElementCapture(v20);
                            CBlockElement::operator delete(v14);
                            CImplPtrAry::Delete(v21, v23);
                        }
                        CImplPtrAry::Append(v20, v23);
                    }
                    else
                    {
                        CElementCapture::~CElementCapture(v16);
                        CBlockElement::operator delete(lpMema);
                        v19 = v18;
                    }
                    CMessage::~CMessage(v19);
                }
                else
                {
                    CImplPtrAry::Append(v13, v23);
                    if (!v14)
                        CServer::SetCapture(v22, v8, 1);
                }
            }
        }
    }
    else
    {
        CDoc::ClearMouseCapture(a2, lpMem);
    }
}